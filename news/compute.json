[
    {
        "title": "Enhanced remote desktop experience: Amazon DCV with Amazon Linux 2023",
        "link": "https://aws.amazon.com/blogs/compute/enhanced-remote-desktop-experience-amazon-dcv-with-amazon-linux-2023/"
    },
    {
        "title": "Monitoring network traffic in AWS Lambda functions",
        "link": "https://aws.amazon.com/blogs/compute/monitoring-network-traffic-in-aws-lambda-functions/"
    },
    {
        "title": "AWS Lambda introduces tiered pricing for Amazon CloudWatch logs and additional logging destinations",
        "link": "https://aws.amazon.com/blogs/compute/aws-lambda-introduces-tiered-pricing-for-amazon-cloudwatch-logs-and-additional-logging-destinations/"
    },
    {
        "title": "Integrating aggregators and Quick Service Restaurants with AWS serverless architectures",
        "link": "https://aws.amazon.com/blogs/compute/integrating-aggregators-and-quick-service-restaurants-with-aws-serverless-architectures/"
    },
    {
        "title": "Optimizing cold start performance of AWS Lambda using advanced priming strategies with SnapStart",
        "link": "https://aws.amazon.com/blogs/compute/optimizing-cold-start-performance-of-aws-lambda-using-advanced-priming-strategies-with-snapstart/"
    },
    {
        "title": "AWS Lambda standardizes billing for INIT Phase",
        "link": "https://aws.amazon.com/blogs/compute/aws-lambda-standardizes-billing-for-init-phase/"
    },
    {
        "title": "Maintaining spare capacity during host failures on AWS Outposts with dynamic monitoring",
        "link": "https://aws.amazon.com/blogs/compute/maintaining-spare-capacity-during-host-failures-on-aws-outposts-with-dynamic-monitoring/"
    },
    {
        "title": "Streamlining trace sampling behavior for AWS Lambda functions with AWS X-Ray",
        "link": "https://aws.amazon.com/blogs/compute/streamlining-trace-sampling-behavior-for-aws-lambda-functions-with-aws-x-ray/"
    },
    {
        "title": "Powering generative AI/ML solutions with AWS Outposts Servers at Edge locations",
        "link": "https://aws.amazon.com/blogs/compute/powering-generative-ai-ml-solutions-with-aws-outposts-servers-at-edge-locations/"
    },
    {
        "title": "Enriching and customizing notifications with Amazon EventBridge Pipes",
        "link": "https://aws.amazon.com/blogs/compute/enriching-and-customizing-notifications-with-amazon-eventbridge-pipes/"
    },
    {
        "title": "Serverless ICYMI 2025 Q1",
        "link": "https://aws.amazon.com/blogs/compute/serverless-icymi-2025-q1/"
    },
    {
        "title": "Anchoring AWS Outposts servers with AWS Direct Connect",
        "link": "https://aws.amazon.com/blogs/compute/anchoring-aws-outposts-servers-with-aws-direct-connect/"
    },
    {
        "title": "Simplifying private API integrations with Amazon EventBridge and AWS Step Functions",
        "link": "https://aws.amazon.com/blogs/compute/simplifying-private-api-integrations-with-amazon-eventbridge-and-aws-step-functions-2/"
    },
    {
        "title": "Implementing network traffic inspection on AWS Outposts rack (update)",
        "link": "https://aws.amazon.com/blogs/compute/implementing-network-traffic-inspection-on-aws-outposts-rack-2/"
    },
    {
        "title": "Optimizing network footprint in serverless applications",
        "link": "https://aws.amazon.com/blogs/compute/optimizing-network-footprint-in-serverless-applications/"
    },
    {
        "title": "Migrating your on-premises workloads to AWS Outposts Rack (update)",
        "link": "https://aws.amazon.com/blogs/compute/migrating-your-on-premises-workloads-to-aws-outposts-rack-2/"
    },
    {
        "title": "Handling billions of invocations \u2013 best practices from AWS Lambda",
        "link": "https://aws.amazon.com/blogs/compute/handling-billions-of-invocations-best-practices-from-aws-lambda/"
    },
    {
        "title": "Implementing a serverless architecture to detect absence of Guardrails in Amazon Bedrock inference API calls",
        "link": "https://aws.amazon.com/blogs/compute/implementing-a-serverless-architecture-to-detect-absence-of-guardrails-in-amazon-bedrock-inference-api-calls/"
    },
    {
        "title": "Efficiently manage Amazon EC2 On-Demand Capacity Reservations (ODCRs) with split, move, and modify",
        "link": "https://aws.amazon.com/blogs/compute/efficiently-manage-amazon-ec2-on-demand-capacity-reservations-odcrs-with-split-move-and-modify/"
    },
    {
        "title": "Introducing an enhanced local IDE experience for AWS Step Functions",
        "link": "https://aws.amazon.com/blogs/compute/introducing-an-enhanced-local-ide-experience-for-aws-step-functions/"
    }
]