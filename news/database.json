[
    {
        "title": "Migrate from Oracle PL/JSON to Amazon Aurora PostgreSQL JSONB",
        "link": "https://aws.amazon.com/blogs/database/migrate-from-oracle-pl-json-to-amazon-aurora-postgresql-jsonb/"
    },
    {
        "title": "Accelerate HNSW indexing and searching with pgvector on Amazon RDS for PostgreSQL",
        "link": "https://aws.amazon.com/blogs/database/accelerate-hnsw-indexing-and-searching-with-pgvector-on-amazon-rds-for-postgresql/"
    },
    {
        "title": "Set up Amazon CloudWatch alarms on Amazon RDS Enhanced Monitoring OS metrics",
        "link": "https://aws.amazon.com/blogs/database/set-up-amazon-cloudwatch-alarms-on-amazon-rds-enhanced-monitoring-os-metrics/"
    },
    {
        "title": "Implementing run-time write synchronization in Amazon Aurora Global Database",
        "link": "https://aws.amazon.com/blogs/database/implementing-run-time-write-synchronization-in-amazon-aurora-global-database/"
    },
    {
        "title": "Migrate from Oracle to Amazon RDS for MySQL, MariaDB or Amazon Aurora MySQL using Oracle GoldenGate",
        "link": "https://aws.amazon.com/blogs/database/migrate-from-oracle-to-amazon-rds-for-mysql-mariadb-or-amazon-aurora-mysql-using-oracle-goldengate/"
    },
    {
        "title": "Build a generative AI-powered agent assistance application using Amazon Aurora and Amazon SageMaker JumpStart",
        "link": "https://aws.amazon.com/blogs/database/build-a-generative-ai-powered-agent-assistance-application-using-amazon-aurora-and-amazon-sagemaker-jumpstart/"
    },
    {
        "title": "Mask PII data using AWS DMS and Amazon Macie during migration",
        "link": "https://aws.amazon.com/blogs/database/mask-pii-data-using-aws-dms-and-amazon-macie-during-migration/"
    },
    {
        "title": "Amazon Timestream for Amazon Connect real-time monitoring",
        "link": "https://aws.amazon.com/blogs/database/amazon-timestream-for-amazon-connect-real-time-monitoring/"
    },
    {
        "title": "Powering Amazon RDS with AWS Graviton3: Benchmarks",
        "link": "https://aws.amazon.com/blogs/database/powering-amazon-rds-with-aws-graviton3-benchmarks/"
    },
    {
        "title": "Use Amazon DynamoDB incremental export to update Apache Iceberg tables",
        "link": "https://aws.amazon.com/blogs/database/use-amazon-dynamodb-incremental-export-to-update-apache-iceberg-tables/"
    },
    {
        "title": "Techniques to improve the state-of-the-art in Cloud FinOps using Amazon Neptune",
        "link": "https://aws.amazon.com/blogs/database/techniques-to-improve-the-state-of-the-art-in-cloud-finops-using-amazon-neptune/"
    },
    {
        "title": "How power utilities analyze and detect harmonics issues using power quality and customer usage data with Amazon Timestream: Part 2",
        "link": "https://aws.amazon.com/blogs/database/part-2-how-power-utilities-analyze-and-detect-harmonics-issues-using-power-quality-and-customer-usage-data-with-amazon-timestream/"
    },
    {
        "title": "Impactful features in PostgreSQL 15",
        "link": "https://aws.amazon.com/blogs/database/impactful-features-in-postgresql-15/"
    },
    {
        "title": "Detect and fix low cardinality indexes in Amazon DocumentDB",
        "link": "https://aws.amazon.com/blogs/database/detect-and-fix-low-cardinality-indexes-in-amazon-documentdb/"
    },
    {
        "title": "Prewarm an Amazon RDS for Oracle database to reduce the impact of lazy loading",
        "link": "https://aws.amazon.com/blogs/database/prewarm-an-amazon-rds-for-oracle-database-to-reduce-the-impact-of-lazy-loading/"
    },
    {
        "title": "Implement Time to Live in Amazon Neptune, Part 1: Property Graph",
        "link": "https://aws.amazon.com/blogs/database/implement-time-to-live-in-amazon-neptune-part-1-property-graph/"
    },
    {
        "title": "Refactor admin task scheduler job schedules from IBM Db2 LUW to Amazon RDS for MySQL, Amazon RDS for MariaDB, or Amazon Aurora MySQL",
        "link": "https://aws.amazon.com/blogs/database/refactor-admin-task-scheduler-job-schedules-from-ibm-db2-luw-to-amazon-rds-for-mysql-amazon-rds-for-mariadb-or-amazon-aurora-mysql/"
    },
    {
        "title": "New \u2013 Fully managed Blue/Green Deployment in Amazon Aurora PostgreSQL and Amazon RDS for PostgreSQL",
        "link": "https://aws.amazon.com/blogs/database/new-fully-managed-blue-green-deployment-in-amazon-aurora-postgresql-and-amazon-rds-for-postgresql/"
    },
    {
        "title": "Reduce downtime with Amazon Aurora MySQL database restart time optimizations",
        "link": "https://aws.amazon.com/blogs/database/reduce-downtime-with-amazon-aurora-mysql-database-restart-time-optimizations/"
    },
    {
        "title": "Upgrade your Amazon DocumentDB clusters using AWS DMS",
        "link": "https://aws.amazon.com/blogs/database/upgrade-your-amazon-documentdb-clusters-using-aws-dms/"
    }
]