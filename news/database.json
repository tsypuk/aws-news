[
    {
        "title": "Automate Amazon RDS for PostgreSQL major or minor version upgrade using AWS Systems Manager and Amazon EC2",
        "link": "https://aws.amazon.com/blogs/database/automate-amazon-rds-for-postgresql-major-or-minor-version-upgrade-using-aws-systems-manager-and-amazon-ec2/"
    },
    {
        "title": "Supercharging vector search performance and relevance with pgvector 0.8.0 on Amazon Aurora PostgreSQL",
        "link": "https://aws.amazon.com/blogs/database/supercharging-vector-search-performance-and-relevance-with-pgvector-0-8-0-on-amazon-aurora-postgresql/"
    },
    {
        "title": "Explore the new openCypher custom functions and subquery support in Amazon Neptune",
        "link": "https://aws.amazon.com/blogs/database/explore-the-new-opencypher-custom-functions-and-subquery-support-in-amazon-neptune/"
    },
    {
        "title": "Connect Amazon Bedrock Agents with Amazon Aurora PostgreSQL using Amazon RDS Data API",
        "link": "https://aws.amazon.com/blogs/database/connect-amazon-bedrock-agents-with-amazon-aurora-postgresql-using-amazon-rds-data-api/"
    },
    {
        "title": "Run SQL Server post-migration activities using Cloud Migration Factory on AWS",
        "link": "https://aws.amazon.com/blogs/database/run-sql-server-post-migration-activities-using-cloud-migration-factory-on-aws/"
    },
    {
        "title": "Amazon Aurora Global Database introduces support for up to 10 secondary Regions",
        "link": "https://aws.amazon.com/blogs/database/amazon-aurora-global-database-introduces-support-for-up-to-10-secondary-regions/"
    },
    {
        "title": "How to configure a Linked Server between Amazon RDS for SQL Server and Teradata database",
        "link": "https://aws.amazon.com/blogs/database/how-to-configure-a-linked-server-between-amazon-rds-for-sql-server-and-teradata-database/"
    },
    {
        "title": "Achieve up to 1.7 times higher write throughput and 1.38 times better price performance with Amazon Aurora PostgreSQL on AWS Graviton4-based R8g instances",
        "link": "https://aws.amazon.com/blogs/database/achieve-up-to-1-7-times-higher-write-throughput-and-1-38-times-better-price-performance-with-amazon-aurora-postgresql-on-aws-graviton4-based-r8g-instances/"
    },
    {
        "title": "How Amazon maintains accurate totals at scale with Amazon DynamoDB",
        "link": "https://aws.amazon.com/blogs/database/how-amazon-maintains-accurate-totals-at-scale-with-amazon-dynamodb/"
    },
    {
        "title": "Build an AI-powered text-to-SQL chatbot using Amazon Bedrock, Amazon MemoryDB, and Amazon RDS",
        "link": "https://aws.amazon.com/blogs/database/build-an-ai-powered-text-to-sql-chatbot-using-amazon-bedrock-amazon-memorydb-and-amazon-rds/"
    },
    {
        "title": "Amazon DynamoDB data modeling for Multi-tenancy \u2013 Part 3",
        "link": "https://aws.amazon.com/blogs/database/amazon-dynamodb-data-modeling-for-multi-tenancy-part-3/"
    },
    {
        "title": "Amazon DynamoDB data modeling for Multi-Tenancy \u2013 Part 2",
        "link": "https://aws.amazon.com/blogs/database/amazon-dynamodb-data-modeling-for-multi-tenancy-part-2/"
    },
    {
        "title": "Amazon DynamoDB data modeling for Multi-Tenancy \u2013 Part 1",
        "link": "https://aws.amazon.com/blogs/database/amazon-dynamodb-data-modeling-for-multi-tenancy-part-1/"
    },
    {
        "title": "Create a unit testing framework for PostgreSQL using the pgTAP extension",
        "link": "https://aws.amazon.com/blogs/database/create-a-unit-testing-framework-for-postgresql-using-the-pgtap-extension/"
    },
    {
        "title": "Scaling Amazon RDS for MySQL performance for Careem\u2019s digital platform on AWS",
        "link": "https://aws.amazon.com/blogs/database/scaling-amazon-rds-for-mysql-performance-for-careems-digital-platform-on-aws/"
    },
    {
        "title": "Amazon CloudWatch Database Insights applied in real scenarios",
        "link": "https://aws.amazon.com/blogs/database/amazon-cloudwatch-database-insights-applied-in-real-scenarios/"
    },
    {
        "title": "Ingest CSV data to Amazon DynamoDB using AWS Lambda",
        "link": "https://aws.amazon.com/blogs/database/ingest-csv-data-to-amazon-dynamodb-using-aws-lambda/"
    },
    {
        "title": "Perform OS upgrades for Amazon RDS Custom for SQL Server CEV with Multi-AZ",
        "link": "https://aws.amazon.com/blogs/database/perform-os-upgrades-for-amazon-rds-custom-for-sql-server-cev-with-multi-az/"
    },
    {
        "title": "Extract and migrate data from nested tables with user-defined nested types from Oracle to PostgreSQL",
        "link": "https://aws.amazon.com/blogs/database/extract-and-migrate-data-from-nested-tables-with-user-defined-nested-types-from-oracle-to-postgresql/"
    },
    {
        "title": "AWS DMS implementation guide: Building resilient database migrations through testing, monitoring, and SOPs",
        "link": "https://aws.amazon.com/blogs/database/aws-dms-implementation-guide-building-resilient-database-migrations-through-testing-monitoring-and-sops/"
    }
]