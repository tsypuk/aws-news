[
    {
        "title": "Zupee implements Amazon Neptune to detect Wallet transaction anomalies in real time",
        "link": "https://aws.amazon.com/blogs/database/zupee-implements-amazon-neptune-to-detect-wallet-transaction-anomalies-in-real-time/"
    },
    {
        "title": "How Habby enhanced resiliency and system robustness using Valkey GLIDE and Amazon ElastiCache",
        "link": "https://aws.amazon.com/blogs/database/how-habby-enhanced-resiliency-and-system-robustness-using-valkey-glide-and-amazon-elasticache/"
    },
    {
        "title": "Migrate SQL Server user databases from Amazon EC2 to Amazon RDS Custom using Amazon EBS snapshots",
        "link": "https://aws.amazon.com/blogs/database/migrate-sql-server-user-databases-from-amazon-ec2-to-amazon-rds-custom-using-amazon-ebs-snapshots/"
    },
    {
        "title": "Choose the right throughput strategy for Amazon DynamoDB applications",
        "link": "https://aws.amazon.com/blogs/database/choose-the-right-throughput-strategy-for-amazon-dynamodb-applications/"
    },
    {
        "title": "Best practices to handle AWS DMS tasks during PostgreSQL upgrades",
        "link": "https://aws.amazon.com/blogs/database/best-practices-to-handle-aws-dms-tasks-during-postgresql-upgrades/"
    },
    {
        "title": "Integrate your Spring Boot application with Amazon ElastiCache",
        "link": "https://aws.amazon.com/blogs/database/integrate-your-spring-boot-application-with-amazon-elasticache/"
    },
    {
        "title": "How Amazon Finance Automation built an operational data store with AWS purpose built databases to power critical finance applications",
        "link": "https://aws.amazon.com/blogs/database/how-amazon-finance-automation-built-an-operational-data-store-with-aws-purpose-built-databases-to-power-critical-finance-applications/"
    },
    {
        "title": "Challenges and strategies of migrating a high-throughput relational database",
        "link": "https://aws.amazon.com/blogs/database/challenges-and-strategies-of-migrating-a-high-throughput-relational-database/"
    },
    {
        "title": "How Heroku migrated hundreds of thousands of self-managed PostgreSQL databases to Amazon Aurora",
        "link": "https://aws.amazon.com/blogs/database/how-heroku-migrated-hundreds-of-thousands-of-self-managed-postgresql-databases-to-amazon-aurora/"
    },
    {
        "title": "Using generative AI and Amazon Bedrock to generate SPARQL queries to discover protein functional information with UniProtKB and Amazon Neptune",
        "link": "https://aws.amazon.com/blogs/database/using-generative-ai-and-amazon-bedrock-to-generate-sparql-queries-to-discover-protein-functional-information-with-uniprotkb-and-amazon-neptune/"
    },
    {
        "title": "Working with OEM Agent software for Amazon RDS for Oracle",
        "link": "https://aws.amazon.com/blogs/database/working-with-oem-agent-software-for-amazon-rds-for-oracle/"
    },
    {
        "title": "Build low-latency, resilient applications with Amazon MemoryDB Multi-Region",
        "link": "https://aws.amazon.com/blogs/database/build-low-latency-resilient-applications-with-amazon-memorydb-multi-region/"
    },
    {
        "title": "Improve PostgreSQL performance using the pgstattuple extension",
        "link": "https://aws.amazon.com/blogs/database/improve-postgresql-performance-using-the-pgstattuple-extension/"
    },
    {
        "title": "Using StatsD for monitoring Oracle databases running on Amazon RDS or Amazon EC2",
        "link": "https://aws.amazon.com/blogs/database/using-statsd-for-monitoring-oracle-databases-running-on-amazon-rds-or-amazon-ec2/"
    },
    {
        "title": "Optimizing cost savings: The advantage of Amazon Aurora over self-managed open source databases",
        "link": "https://aws.amazon.com/blogs/database/optimizing-cost-savings-the-advantage-of-amazon-aurora-over-self-managed-open-source-databases/"
    },
    {
        "title": "Up and running with Apache OFBiz and Amazon Aurora DSQL",
        "link": "https://aws.amazon.com/blogs/database/up-and-running-with-apache-ofbiz-and-amazon-aurora-dsql/"
    },
    {
        "title": "Transition a pivot query that includes dynamic columns from SQL Server to PostgreSQL",
        "link": "https://aws.amazon.com/blogs/database/transition-a-pivot-query-that-includes-dynamic-columns-from-sql-server-to-postgresql/"
    },
    {
        "title": "Integrate natural language processing and generative AI with relational databases",
        "link": "https://aws.amazon.com/blogs/database/integrate-natural-language-processing-and-generative-ai-with-relational-databases/"
    },
    {
        "title": "Scheduled scaling of Amazon Aurora Serverless with Amazon EventBridge Scheduler",
        "link": "https://aws.amazon.com/blogs/database/scheduled-scaling-of-amazon-aurora-serverless-with-amazon-eventbridge-scheduler/"
    },
    {
        "title": "Improve cost visibility of an Amazon RDS multi-tenant instance with Performance Insights and Amazon Athena",
        "link": "https://aws.amazon.com/blogs/database/improve-cost-visibility-of-an-amazon-rds-multi-tenant-instance-with-performance-insights-and-amazon-athena/"
    }
]