[
    {
        "title": "Amazon Timestream for InfluxDB: Expanding managed open source time series databases for data-driven insights and real-time decision making",
        "link": "https://aws.amazon.com/blogs/database/amazon-timestream-for-influxdb-expanding-managed-open-source-time-series-databases-for-data-driven-insights-and-real-time-decision-making/"
    },
    {
        "title": "How Global Payments Inc. improved their tail latency using request hedging with Amazon DynamoDB",
        "link": "https://aws.amazon.com/blogs/database/how-global-payments-inc-improved-their-tail-latency-using-request-hedging-with-amazon-dynamodb/"
    },
    {
        "title": "4.7 times better write query price-performance with AWS Graviton4 R8g instances using Amazon Neptune v1.4.5",
        "link": "https://aws.amazon.com/blogs/database/4-7-times-better-write-query-price-performance-with-aws-graviton4-r8g-instances-using-amazon-neptune-v1-4-5/"
    },
    {
        "title": "Gracefully handle failed AWS Lambda events from Amazon DynamoDB Streams",
        "link": "https://aws.amazon.com/blogs/database/gracefully-handle-failed-aws-lambda-events-from-amazon-dynamodb-streams/"
    },
    {
        "title": "How to optimize Amazon RDS and Amazon Aurora database costs/performance with AWS Compute Optimizer",
        "link": "https://aws.amazon.com/blogs/database/how-to-optimize-amazon-rds-and-amazon-aurora-database-costs-performance-with-aws-compute-optimizer/"
    },
    {
        "title": "Vibe code with AWS databases using Vercel v0",
        "link": "https://aws.amazon.com/blogs/database/vibe-code-with-aws-databases-using-vercel-v0/"
    },
    {
        "title": "Beyond Correlation: Finding Root-Causes using a network digital twin graph and agentic AI",
        "link": "https://aws.amazon.com/blogs/database/beyond-correlation-finding-root-causes-using-a-network-digital-twin-graph-and-agentic-ai/"
    },
    {
        "title": "Demystifying the AWS advanced JDBC wrapper plugins",
        "link": "https://aws.amazon.com/blogs/database/demystifying-the-aws-advanced-jdbc-wrapper-plugins/"
    },
    {
        "title": "Enhanced throttling observability in Amazon DynamoDB",
        "link": "https://aws.amazon.com/blogs/database/enhanced-throttling-observability-in-amazon-dynamodb/"
    },
    {
        "title": "Securing Amazon Aurora DSQL: Access control best practices",
        "link": "https://aws.amazon.com/blogs/database/securing-amazon-aurora-dsql-access-control-best-practices/"
    },
    {
        "title": "Announcing Extended Support for Amazon DocumentDB (with MongoDB compatibility) version 3.6",
        "link": "https://aws.amazon.com/blogs/database/announcing-extended-support-for-amazon-documentdb-with-mongodb-compatibility-version-3-6/"
    },
    {
        "title": "Improve AWS DMS continuous replication performance by using column filters to parallelize high-volume tables",
        "link": "https://aws.amazon.com/blogs/database/improve-aws-dms-continuous-replication-performance-by-using-column-filters-to-parallelize-high-volume-tables/"
    },
    {
        "title": "Scaling transaction peaks: Juspay\u2019s approach using Amazon ElastiCache",
        "link": "https://aws.amazon.com/blogs/database/scaling-transaction-peaks-juspays-approach-using-amazon-elasticache/"
    },
    {
        "title": "How Wiz achieved near-zero downtime for Amazon Aurora PostgreSQL major version upgrades at scale using Aurora Blue/Green Deployments",
        "link": "https://aws.amazon.com/blogs/database/how-wiz-achieved-near-zero-downtime-for-amazon-aurora-postgresql-major-version-upgrades-at-scale-using-aurora-blue-green-deployments/"
    },
    {
        "title": "Simplify data integration using zero-ETL from Amazon RDS to Amazon Redshift",
        "link": "https://aws.amazon.com/blogs/database/simplify-data-integration-using-zero-etl-from-amazon-rds-to-amazon-redshift/"
    },
    {
        "title": "Automate conversion of Oracle SQL to PostgreSQL inside Java applications with AWS SCT",
        "link": "https://aws.amazon.com/blogs/database/automate-conversion-of-oracle-sql-to-postgresql-inside-java-applications-with-aws-sct/"
    },
    {
        "title": "How Clari achieved 50% cost savings with Amazon Aurora I/O-Optimized",
        "link": "https://aws.amazon.com/blogs/database/how-clari-achieved-50-cost-savings-with-amazon-aurora-i-o-optimized/"
    },
    {
        "title": "Introducing the Amazon DynamoDB data modeling MCP tool",
        "link": "https://aws.amazon.com/blogs/database/introducing-the-amazon-dynamodb-data-modeling-mcp-tool/"
    },
    {
        "title": "Introducing Extended Support for Amazon ElastiCache version 4 and version 5 for Redis OSS",
        "link": "https://aws.amazon.com/blogs/database/introducing-extended-support-for-amazon-elasticache-version-4-and-version-5-for-redis-oss/"
    },
    {
        "title": "Improve PostgreSQL performance: Diagnose and mitigate lock manager contention",
        "link": "https://aws.amazon.com/blogs/database/improve-postgresql-performance-diagnose-and-mitigate-lock-manager-contention/"
    }
]