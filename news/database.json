[
    {
        "title": "How the Amazon TimeHub team designed a recovery and validation framework for their data replication framework: Part 4",
        "link": "https://aws.amazon.com/blogs/database/how-the-amazon-timehub-team-designed-a-recovery-and-validation-framework-for-their-data-replication-framework-part-4/"
    },
    {
        "title": "How the Amazon TimeHub team handled disruption in AWS DMS CDC task caused by Oracle RESETLOGS: Part 3",
        "link": "https://aws.amazon.com/blogs/database/how-the-amazon-timehub-team-handled-disruption-in-aws-dms-cdc-task-caused-by-oracle-resetlogs-part-3/"
    },
    {
        "title": "How the Amazon TimeHub team designed resiliency and high availability for their data replication framework: Part 2",
        "link": "https://aws.amazon.com/blogs/database/how-the-amazon-timehub-team-designed-resiliency-and-high-availability-for-their-data-replication-framework-part-2/"
    },
    {
        "title": "Understand the benefits of physical replication in Amazon RDS for PostgreSQL Blue/Green Deployments",
        "link": "https://aws.amazon.com/blogs/database/understand-the-benefits-of-physical-replication-in-amazon-rds-for-postgresql-blue-green-deployments/"
    },
    {
        "title": "Join your Amazon RDS for Db2 instances across accounts to a single shared domain",
        "link": "https://aws.amazon.com/blogs/database/join-your-amazon-rds-for-db2-instances-across-accounts-to-a-single-shared-domain/"
    },
    {
        "title": "Scaling to 70M users: How Flo Health optimized Amazon DynamoDB for cost and performance",
        "link": "https://aws.amazon.com/blogs/database/scaling-to-70m-users-how-flo-health-optimized-amazon-dynamodb-for-cost-and-performance/"
    },
    {
        "title": "Capture data changes while restoring an Amazon DynamoDB table",
        "link": "https://aws.amazon.com/blogs/database/capture-data-changes-while-restoring-an-amazon-dynamodb-table/"
    },
    {
        "title": "Best practices for maintenance activities in Amazon RDS for Oracle",
        "link": "https://aws.amazon.com/blogs/database/best-practices-for-maintenance-activities-in-amazon-rds-for-oracle/"
    },
    {
        "title": "Using RDS Proxy with Amazon RDS Multi-AZ DB instance deployment to improve planned failover time",
        "link": "https://aws.amazon.com/blogs/database/using-rds-proxy-with-amazon-rds-multi-az-db-instance-deployment-to-improve-planned-failover-time/"
    },
    {
        "title": "How Firmex used AWS SCT and AWS DMS to move 65,000 on-premises Microsoft SQL Server databases to an Amazon Aurora PostgreSQL cluster",
        "link": "https://aws.amazon.com/blogs/database/how-firmex-used-aws-sct-and-aws-dms-to-move-65000-on-premises-microsoft-sql-server-databases-to-an-amazon-aurora-postgresql-cluster/"
    },
    {
        "title": "Accelerate your generative AI application development with Amazon Bedrock Knowledge Bases Quick Create and Amazon Aurora Serverless",
        "link": "https://aws.amazon.com/blogs/database/accelerate-your-generative-ai-application-development-with-amazon-bedrock-knowledge-bases-quick-create-and-amazon-aurora-serverless/"
    },
    {
        "title": "Prevent transaction ID wraparound by using postgres_get_av_diag() for monitoring autovacuum",
        "link": "https://aws.amazon.com/blogs/database/prevent-transaction-id-wraparound-by-using-postgres_get_av_diag-for-monitoring-autovacuum/"
    },
    {
        "title": "From caching to real-time analytics: Essential use cases for Amazon ElastiCache for Valkey",
        "link": "https://aws.amazon.com/blogs/database/from-caching-to-real-time-analytics-essential-use-cases-for-amazon-elasticache-for-valkey/"
    },
    {
        "title": "Automate pre-checks for your Amazon RDS for MySQL major version upgrade",
        "link": "https://aws.amazon.com/blogs/database/automate-pre-checks-for-your-amazon-rds-for-mysql-major-version-upgrade/"
    },
    {
        "title": "Concurrency control in Amazon Aurora DSQL",
        "link": "https://aws.amazon.com/blogs/database/concurrency-control-in-amazon-aurora-dsql/"
    },
    {
        "title": "New \u2013 Accelerate database modernization with generative AI using AWS Database Migration Service Schema Conversion",
        "link": "https://aws.amazon.com/blogs/database/new-accelerate-database-modernization-with-generative-ai-using-aws-database-migration-service-schema-conversion/"
    },
    {
        "title": "Introducing Amazon Aurora DSQL",
        "link": "https://aws.amazon.com/blogs/database/introducing-amazon-aurora-dsql/"
    },
    {
        "title": "Automate database object deployments in Amazon Aurora using AWS CodePipeline",
        "link": "https://aws.amazon.com/blogs/database/automate-database-object-deployments-in-amazon-aurora-using-aws-codepipeline/"
    },
    {
        "title": "Migrate time series data to Amazon Timestream for LiveAnalytics using AWS DMS",
        "link": "https://aws.amazon.com/blogs/database/migrate-time-series-data-to-amazon-timestream-for-liveanalytics-using-aws-dms/"
    },
    {
        "title": "Run event-driven stored procedures with AWS Lambda for Amazon Aurora PostgreSQL and Amazon RDS for PostgreSQL",
        "link": "https://aws.amazon.com/blogs/database/run-event-driven-stored-procedures-with-aws-lambda-for-amazon-aurora-postgresql-and-amazon-rds-for-postgresql/"
    }
]